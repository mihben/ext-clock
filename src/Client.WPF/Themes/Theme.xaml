<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:Client.WPF.Converters"
                    xmlns:enum="clr-namespace:Client.WPF.Services"
                    x:Class="Client.WPF.Styles.Theme"
                    xmlns:icons="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    x:ClassModifier="public">
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Theme.Dark.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="Status__Border--Connected" Color="Green"></SolidColorBrush>
    <RadialGradientBrush x:Key="Status__Background--Connected">
        <GradientStop Color="LightGreen" Offset="0.25"></GradientStop>
        <GradientStop Color="Green" Offset="1"></GradientStop>
    </RadialGradientBrush>

    <SolidColorBrush x:Key="Status__Border--Disconnected" Color="DimGray"></SolidColorBrush>
    <RadialGradientBrush x:Key="Status__Background--Disconnected">
        <GradientStop Color="LightGray" Offset="0.25"></GradientStop>
        <GradientStop Color="DimGray" Offset="1"></GradientStop>
    </RadialGradientBrush>
    
    <Style x:Key="Main" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{DynamicResource ResourceKey=Background}"/>
    </Style>
    
    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey=Text}"></Setter>

        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style x:Key="Status" TargetType="{x:Type Border}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ConnectionStatus}" Value="{x:Static enum:ConnectionStatus.Connected}">
                <Setter Property="Background" Value="{StaticResource Status__Background--Connected}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Status__Border--Connected}"/>                
            </DataTrigger>
            <DataTrigger Binding="{Binding ConnectionStatus}" Value="{x:Static enum:ConnectionStatus.Disconnected}">
                <Setter Property="Background" Value="{StaticResource Status__Background--Disconnected}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Status__Border--Disconnected}"/>                
            </DataTrigger>
            <DataTrigger Binding="{Binding ConnectionStatus}" Value="{x:Static enum:ConnectionStatus.Connecting}">
                <Setter Property="Background" Value="{StaticResource Status__Background--Connected}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Status__Border--Connected}"/>
                <DataTrigger.EnterActions>
                    <BeginStoryboard Name="Connecting">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" AutoReverse="False" RepeatBehavior="Forever">
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0.6" Value="1"/>
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0.7" Value="0"/>
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0.26" Value="1"/>
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0.28" Value="0"/>
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0.32" Value="1"/>
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0.33" Value="0"/>
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0.34" Value="1"/>
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0.42" Value="0"/>
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0.55" Value="1"/>
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0.56" Value="0"/>
                                <DiscreteDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="Connecting"></StopStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Section" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource Section__Border}"/>
        <Setter Property="BorderThickness" Value="0 1 0 0"/>
        
        <Setter Property="Padding" Value="4"/>
    </Style>

    <Style TargetType="{x:Type icons:PackIconFontAwesome}">
        <Setter Property="Foreground" Value="{DynamicResource Settings__Menu}"></Setter>
    </Style>

    <Style x:Key="Label--Required" TargetType="{x:Type TextBlock}">
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey=Text}"></Setter>

        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style x:Key="TextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="4"/>

        <Setter Property="FontSize" Value="14"/>

        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="TextBox--Required" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBox}">
        <Setter Property="Background" Value="{StaticResource Field--Required}"/>
    </Style>

    <Style x:Key="Button" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Padding" Value="8 2 8 2"/>

        <Setter Property="FontSize" Value="14"/>

        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
</ResourceDictionary>